% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_cfg.R
\name{Constant_cfg}
\alias{Constant_cfg}
\title{Configuration of a Constant Estimator}
\description{
\code{Constant_cfg} is a configuration class for estimating a constant model.
That is, the model is a simple, one-parameter mean model.
}
\examples{

## ------------------------------------------------
## Method `Constant_cfg$new`
## ------------------------------------------------

Constant_cfg$new()
}
\section{Super class}{
\code{\link[tidyhte:Model_cfg]{tidyhte::Model_cfg}} -> \code{Constant_cfg}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{model_class}}{The class of the model, required for all classes
which inherit from \code{Model_cfg}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Constant_cfg-new}{\code{Constant_cfg$new()}}
\item \href{#method-Constant_cfg-clone}{\code{Constant_cfg$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant_cfg-new"></a>}}
\if{latex}{\out{\hypertarget{method-Constant_cfg-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{Constant_cfg} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant_cfg$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new \code{Constant_cfg} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{Constant_cfg$new()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant_cfg-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Constant_cfg-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant_cfg$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
